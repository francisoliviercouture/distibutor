{"version":3,"sources":["core/environment/demo.ts","pages/beerDescriptionPage/index.tsx","core/stores/cartStore.tsx","core/contexts/index.tsx","core/hooks/useStores.tsx","components/beerListItem/index.tsx","components/beerList/index.tsx","components/cartListItem/index.tsx","components/cartList/index.tsx","components/cartDrawerFooter/index.tsx","components/cartDrawer/index.tsx","components/distributorHeader/index.tsx","pages/distributorPage/index.tsx","App.tsx","index.tsx","assets/demo/ambigue.png"],"names":["getRandomArbitrary","min","max","Math","random","demoEnv","inventory","Array","randItems","i","item","id","name","ibu","alcoolPercentage","type","push","BeerDescriptionPage","history","useHistory","className","onBack","goBack","title","subTitle","src","ambigue","alt","style","maxHeight","Item","label","CartStore","action","bound","this","items","pop","length","observable","array","computed","storesContext","React","createContext","cartStore","useStores","useContext","Option","Select","OptGroup","BeerListItem","props","beerItem","onClickBeerItem","useState","selectedOption","setSelectedOption","onClick","fontSize","toPrecision","width","size","value","onChange","shape","icon","PlusOutlined","disabled","addItem","undefined","BeerList","onItemClickAction","bordered","dataSource","arrayBeers","renderItem","CartListItem","removeItem","CartList","CartDrawerFooter","onGoToPaymentAction","count","block","CartDrawer","isOpened","onCloseAction","useObserver","placement","footer","console","log","onClose","visible","DistributorHeader","distributor","onOpenDrawerAction","ShoppingCartOutlined","DistributorPage","isDrawerVisible","setIsDrawerVisible","placeholder","onSearch","App","path","exact","to","ReactDOM","render","Fragment","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.afb135bf.chunk.js","sourcesContent":["import { BeerListItem } from \"../models/beer-list-item\";\r\nimport { DistributorModel } from \"../models/distributor-model\";\r\n\r\nexport class Demo {\r\n    get inventory(): Array<BeerListItem> {\r\n        let inventory = new Array<BeerListItem>()\r\n\r\n        const randItems = getRandomArbitrary(1, 5);\r\n\r\n        for (let i = 0; i < randItems; i++) {\r\n            const randIbu = getRandomArbitrary(5, 95);\r\n            const item = {\r\n                id: i,\r\n                name: 'Ambiguë',\r\n                ibu: randIbu, \r\n                alcoolPercentage: 4.5, \r\n                type: 'Bitter'\r\n            } as BeerListItem;\r\n\r\n            inventory.push(item);\r\n        }\r\n\r\n        return inventory;\r\n    }\r\n\r\n    get distributor(): DistributorModel {\r\n        return {name: 'Voie Maltée'} as DistributorModel;\r\n    }\r\n}\r\n\r\nfunction getRandomArbitrary(min: number, max: number): number {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nconst demoEnv = new Demo();\r\n\r\nexport default demoEnv;","import React from 'react';\r\nimport { PageHeader, Descriptions, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ambigue from '../../assets/demo/ambigue.png';\r\n\r\nexport function BeerDescriptionPage() {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    onBack={() => history.goBack()}\r\n                  title=\"Voie Maltée - L'Ambiguë\"\r\n                  subTitle=\"Bitter\"\r\n                />\r\n              </div>\r\n            <section className=\"app-content--section\">\r\n                <img src={ambigue} alt=\"\" style={{maxHeight: '10rem'}}/>\r\n                <Descriptions title=\"Beer Info\">\r\n                    <Descriptions.Item label=\"Name\">Beer name</Descriptions.Item>\r\n                    <Descriptions.Item label=\"IBU\">20</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Alcool percentage\">45%</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Better served with\">Pork, Nothing</Descriptions.Item>\r\n                    <Descriptions.Item label=\"In Stock\">200</Descriptions.Item>\r\n                </Descriptions>\r\n                <Button>dsads</Button>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BeerDescriptionPage;","import { observable, action, computed } from \"mobx\";\r\n\r\nexport class CartStore {\r\n    @observable\r\n    items = observable.array<any>([]);\r\n\r\n    @action.bound\r\n    addItem(item: any): void {\r\n        this.items.push(item);\r\n    }\r\n\r\n    @action.bound\r\n    removeItem(): void {\r\n        this.items.pop();\r\n    }\r\n\r\n    @computed\r\n    get count(): number {\r\n        return this.items.length;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { CartStore } from '../stores/cartStore';\r\n\r\nexport const storesContext = React.createContext({\r\n    cartStore: new CartStore()\r\n})","import React from \"react\";\r\nimport { storesContext } from \"../contexts\";\r\n\r\nexport const useStores = () => React.useContext(storesContext);","import React, { useState } from 'react';\r\n\r\nimport { List, Divider, Select, Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport ambigue from '../../assets/demo/ambigue.png';\r\n\r\nimport './index.scss';\r\nimport { useStores } from '../../core/hooks/useStores';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\ninterface BeerListItemProps {\r\n    beerItem: any;\r\n    onClickBeerItem: (beerItem: any) => void;\r\n}\r\n\r\nexport function BeerListItem(props: BeerListItemProps) {\r\n    const { beerItem, onClickBeerItem } = props;\r\n    const { cartStore } = useStores();\r\n\r\n    const [selectedOption, setSelectedOption] = useState<number>();\r\n\r\n    function addOptionToCart() {\r\n        cartStore.addItem(beerItem);\r\n        setSelectedOption(undefined);\r\n    }\r\n\r\n    return (\r\n        <List.Item className=\"beer-list-item\">\r\n            <>\r\n                <div className=\"beer-list-item__header\">\r\n                    <img src={ambigue} alt=\"\"/>\r\n                    <div className=\"beer-list-item__header__desc\" onClick={() => onClickBeerItem(beerItem)}>\r\n                        <div style={{ fontSize: 18 }}>\r\n                            <span>{beerItem.name}</span>\r\n                            <Divider type=\"vertical\"></Divider>\r\n                            <span style={{ fontSize: 15 }}><b>{beerItem.type}</b></span>\r\n                        </div>\r\n                        <div style={{ fontSize: 13 }}>\r\n                            <span>{beerItem.ibu.toPrecision(2)} <b>IBU</b></span>\r\n                            <Divider type=\"vertical\"></Divider>\r\n                            <span>{beerItem.alcoolPercentage.toPrecision(2)}% </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"beer-list-item__options\">\r\n                    <Select style={{ width: 120 }}\r\n                        size=\"small\"\r\n                        value={selectedOption}\r\n                        onChange={(value) => setSelectedOption(value)}\r\n                    >\r\n                        <OptGroup label=\"Bottles\">\r\n                            <Option value=\"1\">1 x 473 ml</Option>\r\n                            <Option value=\"2\">6 x 473 ml</Option>\r\n                        </OptGroup>\r\n                        <OptGroup label=\"Cans\">\r\n                            <Option value=\"3\">6 x 500 ml</Option>\r\n                        </OptGroup>\r\n                    </Select>\r\n                    <div className=\"beer-list-item__options__button\">\r\n                        <Button type=\"ghost\"\r\n                            shape=\"round\"\r\n                            size=\"small\"\r\n                            icon={<PlusOutlined></PlusOutlined>}\r\n                            disabled={!selectedOption}\r\n                            onClick={() => addOptionToCart()}>Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </List.Item>\r\n    );\r\n}\r\n\r\nexport default BeerListItem;","import React from 'react';\r\nimport { List } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport BeerListItem from '../beerListItem';\r\n\r\ninterface BeerListItemProps {\r\n    arrayBeers: Array<any>;\r\n}\r\n\r\nexport function BeerList(props: BeerListItemProps) {\r\n    let history = useHistory();\r\n\r\n    function onItemClickAction(item: any) {\r\n        history.push(`/beer/${item.id}`);\r\n    }\r\n\r\n    return (\r\n        <List\r\n            size=\"large\"\r\n            bordered\r\n            dataSource={props.arrayBeers}\r\n            renderItem={item => <BeerListItem beerItem={item} onClickBeerItem={onItemClickAction}/>}>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default BeerList;","import React from 'react';\r\nimport { List } from 'antd';\r\nimport { useStores } from '../../core/hooks/useStores';\r\n\r\ninterface ICartListItemProps {\r\n    item: any;\r\n}\r\n\r\nexport function CartListItem(props: ICartListItemProps) {\r\n    const { item } = props;\r\n    const { cartStore } = useStores();\r\n\r\n    return (\r\n        <List.Item className=\"beer-list-item\" onClick={() => cartStore.removeItem()}>\r\n            {item.name}\r\n        </List.Item>\r\n    );\r\n}\r\n\r\nexport default CartListItem;    ","import React from 'react';\r\nimport { List } from 'antd';\r\n\r\nimport CartListItem from '../cartListItem';\r\n\r\ninterface ICartListProps {\r\n    dataSource: any\r\n}\r\n\r\nexport function CartList(props: ICartListProps) {\r\n    const { dataSource } = props;\r\n\r\n    return (\r\n        <List\r\n            size=\"large\"\r\n            bordered\r\n            dataSource={dataSource}\r\n            renderItem={item => <CartListItem item={item} />}>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default CartList;","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { useStores } from '../../core/hooks/useStores';\r\n\r\ninterface ICartDrawerFooterProps {\r\n    onGoToPaymentAction: () => void;\r\n}\r\n\r\nexport function CartDrawerFooter(props: ICartDrawerFooterProps) {\r\n    const { onGoToPaymentAction } = props;\r\n\r\n    const { cartStore } = useStores();\r\n\r\n    return (\r\n        <Button type=\"primary\"\r\n            onClick={onGoToPaymentAction}\r\n            disabled={cartStore.count <= 0}\r\n            block\r\n        >\r\n            Go to payment\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default CartDrawerFooter;","import React from 'react';\r\n\r\nimport { Drawer } from 'antd';\r\n\r\nimport CartList from '../cartList';\r\nimport CartDrawerFooter from '../cartDrawerFooter';\r\nimport { useStores } from '../../core/hooks/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\n\r\ninterface ICartDrawerProps {\r\n    isOpened: boolean;\r\n    onCloseAction: () => void;\r\n}\r\n\r\nexport function CartDrawer(props: ICartDrawerProps) {\r\n    const { isOpened, onCloseAction } = props;\r\n    const { cartStore } = useStores();\r\n\r\n    return useObserver(() =>\r\n        <Drawer\r\n            title=\"Your cart\"\r\n            placement=\"right\"\r\n            footer={<CartDrawerFooter onGoToPaymentAction={() => console.log('payment')} />}\r\n            onClose={onCloseAction}\r\n            visible={isOpened}\r\n        >\r\n            <CartList dataSource={cartStore.items}></CartList>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default CartDrawer;","import React from 'react';\r\n\r\nimport { useObserver } from 'mobx-react-lite';\r\n\r\nimport { Badge, Button } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nimport { DistributorModel } from '../../core/models/distributor-model';\r\n\r\nimport './index.scss';\r\n\r\nimport { useStores } from '../../core/hooks/useStores';\r\n\r\ninterface DistributorHeaderProps {\r\n    distributor: DistributorModel;\r\n    onOpenDrawerAction: () => void;\r\n}\r\n\r\nexport function DistributorHeader(props: DistributorHeaderProps) {\r\n    const { distributor, onOpenDrawerAction } = props;\r\n    const { cartStore } = useStores();\r\n    \r\n    return useObserver(() =>\r\n        <div className=\"distributor-header\">\r\n            <div className=\"distributor-header__title\">\r\n                <h1>{distributor.name}</h1>\r\n                <p>Delivery area: Québec, <b>Québec</b></p>\r\n            </div>\r\n            <div className=\"distributor-header__cart\">\r\n                <Badge count={cartStore.count}>\r\n                    <Button type=\"primary\" shape=\"round\" size=\"large\" icon={<ShoppingCartOutlined />} onClick={onOpenDrawerAction}>Cart</Button>\r\n                </Badge>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DistributorHeader;","import React, { useState } from 'react';\r\n\r\nimport Search from 'antd/lib/input/Search';\r\n\r\nimport BeerList from '../../components/beerList';\r\nimport CartDrawer from '../../components/cartDrawer';\r\nimport DistributorHeader from '../../components/distributorHeader';\r\n\r\n\r\nexport function DistributorPage(props: any) {\r\n    const { distributor, inventory } = props;\r\n    const [isDrawerVisible, setIsDrawerVisible] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            <DistributorHeader\r\n                distributor={distributor}\r\n                onOpenDrawerAction={() => setIsDrawerVisible(true)}\r\n            />\r\n            <div className=\"app-content\">\r\n                <section className=\"app-content__section\">\r\n                    <Search placeholder=\"Search for a beer\" onSearch={value => console.log(value)} />\r\n                </section>\r\n                <section className=\"app-content__section\">\r\n                    <h3>Recently added</h3>\r\n                    <BeerList arrayBeers={inventory} />\r\n                </section>\r\n            </div>\r\n            <CartDrawer\r\n                isOpened={isDrawerVisible}\r\n                onCloseAction={() => setIsDrawerVisible(false)}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DistributorPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport demoEnv from './core/environment/demo';\n\n\nimport { BeerDescriptionPage } from './pages/beerDescriptionPage';\nimport { DistributorPage } from './pages/distributorPage';\n\nimport './App.scss';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <main className=\"App\">\n        <Switch>\n          <Route path=\"/beer/:id\">\n            <BeerDescriptionPage />\n          </Route>\n          <Route exact path=\"/distributor\">\n            <DistributorPage distributor={demoEnv.distributor} inventory={demoEnv.inventory}/>\n          </Route>\n          <Redirect path=\"*\" to=\"/distributor\"></Redirect>\n        </Switch>\n      </main>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mobx-react-lite/batchingForReactDom'\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/ambigue.947205fb.png\";"],"sourceRoot":""}